@model IEnumerable<Project1.Models.Vehicles>

@{
    ViewBag.Title = "Vehicles";
    var isLoggedIn = Session["UserId"] != null;
}

<h2 class="text-center">Vehicle List</h2>


<!-- Search Bar -->
<div class="container mt-3 d-flex justify-content-center">
    <input type="text" id="searchInput" placeholder="Search Vehicles..." class="form-control" style="max-width: 300px;" />
</div>

<p>
    @if (Session["Role"]?.ToString() == "Admin")
    {
        @Html.ActionLink("Create New", "Create")
    }
</p>

<!-- Cart Dropdown (only visible if logged in) -->
@if (isLoggedIn)
{
    <div id="cartDropdown" style="position: fixed; top: 10px; right: 10px; z-index: 9999;">
        <button id="cartButton" class="btn btn-warning">
            Cart <span id="cartCount">0</span>
        </button>
        <div id="cartDropdownMenu" style="display: none; background: #f9f9f9; border: 1px solid #ddd; padding: 10px; position: absolute; top: 40px; right: 0; width: 300px; max-height: 300px; overflow-y: auto;">
            <ul id="cartItems"></ul>
            <p>Total: $<span id="totalPrice">0</span></p>
            <button id="checkoutBtn" class="btn btn-primary" style="display:none;">Checkout</button>
        </div>
    </div>
}

<!-- Vehicle Cards -->
<div id="vehicleCards" class="d-flex flex-wrap justify-content-center mt-4">
    @foreach (var vehicle in Model)
    {
        var firstImage = (vehicle.ImagePath ?? "").Split(',').FirstOrDefault();
        var imagePath = !string.IsNullOrWhiteSpace(firstImage) ? "/" + firstImage.TrimStart('/') : Url.Content("~/Content/placeholder.jpg");

        <div class="vehicle-card">
            <img src="@imagePath" alt="@vehicle.Make" class="vehicle-image" />
            <h4>@vehicle.Make</h4>
            <p>@vehicle.Location</p>
            <p>Price: $@vehicle.Price.ToString("N2")</p>
            <a href="@Url.Action("Details", "Vehicles", new { id = vehicle.Id })" class="btn btn-info">Show Details</a>
            @if (isLoggedIn)
            {
                <button class="btn btn-success add-to-cart-btn mt-2"
                        data-id="@vehicle.Id"
                        data-make="@vehicle.Make"
                        data-location="@vehicle.Location"
                        data-price="@vehicle.Price">
                    Add to Cart
                </button>
            }
        </div>
    }
</div>

<!-- Styling -->
<style>
    .vehicle-card {
        width: 220px;
        margin: 10px;
        padding: 10px;
        border: 1px solid #ccc;
        text-align: center;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .vehicle-card:hover {
            transform: scale(1.03);
        }

    .vehicle-image {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 6px;
        margin-bottom: 10px;
    }
</style>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        let cart = [];

        // Add to cart
        $(document).on("click", ".add-to-cart-btn", function () {
            let vehicle = {
                id: $(this).data("id"),
                make: $(this).data("make"),
                location: $(this).data("location"),
                price: parseFloat($(this).data("price"))
            };

            if (cart.find(item => item.id === vehicle.id)) {
                alert("This item is already in the cart.");
            } else {
                vehicle.quantity = 1;
                cart.push(vehicle);
                updateCartDisplay();
            }
        });

        // Remove from cart
        $(document).on("click", ".remove-btn", function () {
            const id = $(this).data("id");
            cart = cart.filter(item => item.id !== id);
            updateCartDisplay();
        });

        // Update cart display
        function updateCartDisplay() {
            $("#cartItems").html('');
            let total = 0;

            cart.forEach(item => {
                $("#cartItems").append(`
                    <li>${item.make} - ${item.location} ($${item.price.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })})
                        <span class="remove-btn" style="cursor:pointer;color:red;" data-id="${item.id}">Remove</span>
                    </li>
                `);
                total += item.price;
            });

            $("#totalPrice").text(total.toFixed(2));
            $("#cartCount").text(cart.length);
            $("#checkoutBtn").toggle(cart.length > 0);
        }

        // Show/hide dropdown
        $("#cartButton").click(() => $("#cartDropdownMenu").toggle());

        // Redirect to checkout with vehicle ID from first item in cart
        $("#checkoutBtn").click(function () {
            if (cart.length === 0) {
                alert("Your cart is empty.");
            return;
            }

            $.ajax({
                url: '@Url.Action("StartCheckout", "Vehicles")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(cart),
                success: function () {
                    window.location.href = '@Url.Action("Checkout", "Vehicles")';
                },
                error: function () {
                    alert("Could not start checkout.");
                }
            });
        });

        // Search input
        $("#searchInput").on("keyup", function () {
            const query = $(this).val();
            if (query.length > 0) {
                searchVehicles(query);
            } else {
                renderVehicleCards(@Html.Raw(Json.Encode(Model)));
            }
        });

        // Search via AJAX
        function searchVehicles(query) {
            $.ajax({
                url: '@Url.Action("SearchVehicles", "Vehicles")',
                type: 'GET',
                data: { searchString: query },
                success: function (data) {
                    renderVehicleCards(data);
                },
                error: function () {
                    alert("Search failed.");
                }
            });
        }

        function renderVehicleCards(vehicles) {
            const container = $("#vehicleCards");
            container.empty();

            if (!vehicles || vehicles.length === 0) {
                container.append('<p>No vehicles found.</p>');
                return;
            }

            const isLoggedIn = @Html.Raw((Session["UserId"] != null).ToString().ToLower());

            vehicles.forEach(vehicle => {
                let firstImage = (vehicle.ImagePath || '').split(',')[0].trim().replace(/^\/+/, '');
                let imagePath = firstImage ? '/' + firstImage : '/Content/placeholder.jpg';

                let cardHtml = `
                    <div class="vehicle-card">
                        <img src="${imagePath}" alt="${vehicle.Make}" class="vehicle-image" />
                        <h4>${vehicle.Make}</h4>
                        <p>${vehicle.Location}</p>
                        <p>Price: $${parseFloat(vehicle.Price).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</p>
                        <a href="/Vehicles/Details/${vehicle.Id}" class="btn btn-info">Show Details</a>`;

                if (isLoggedIn) {
                    cardHtml += `
                        <button class="btn btn-success add-to-cart-btn mt-2"
                                data-id="${vehicle.Id}"
                                data-make="${vehicle.Make}"
                                data-location="${vehicle.Location}"
                                data-price="${vehicle.Price}">
                            Add to Cart
                        </button>`;
                }

                cardHtml += `</div>`;
                container.append(cardHtml);
            });
        }
    });
</script>
